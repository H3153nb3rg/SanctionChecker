###############################################################################
#
#     Copyright (c) 2015 Jim Fandango (The Last Guy Coding)
#
#     Permission is hereby granted, free of charge, to any person obtaining
#     a copy of this software and associated documentation files (the "Software"),
#     to deal in the Software without restriction, including without limitation
#     the rights to use, copy, modify, merge, publish, distribute, sublicense,
#     and/or sell copies of the Software, and to permit persons to whom the Software
#     is furnished to do so, subject to the following conditions:
#
#     The above copyright notice and this permission notice shall be included in
#     all copies or substantial portions of the Software.
#
#     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
#     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#     IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
#     CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
#     TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
#     OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
###############################################################################

# Properties used to leverage the spring config

#Streams.Name=Swift,Name -> all streams to activate !!!

#-----------------------------------------------
#-----------------------------------------------
Streams.Name=Swift
#Streams.Name=Sepa
#-----------------------------------------------
#-----------------------------------------------

# Folders:

Output.Folder=C:\\temp\\SanctionTest\\out
Input.Folder=C:\\temp\\SanctionTest\\in
Queue.Folder=C:\\temp\\SanctionTest\\queues

Watchlists.Folder=C:\\Users\\johannes\\Sanctionlists
WatchlistsHist.Folder=C:\\temp\\SanctionTest\\listhist



# shorter tokens are ignored
# bigger difference is not fuzzied 
Swift.minTokenLen=2
Swift.minRelVal=79
Swift.minAbsVal=60
# fuzzynessfactor %
Swift.fuzzyVal=20

Swift.Input.Folder=C:\\temp\\SanctionTest\\in\\swift
Swift.Input.FilePattern=*.txt
Swift.Output.Folder=C:\\temp\\SanctionTest\\out\\swift

Swift.InputDelay=10000

#PROCESSING QUEUES
# for file persisted only - path(or just a token)

Swift.NrWorkers.Input=1
Swift.NrWorkers.OutputHit=0
Swift.NrWorkers.OutputNoHit=0
Swift.NrWorkers.Error=1
Swift.NrWorkers.Checker=4
Swift.NrWorkers.PostHit=1
Swift.NrWorkers.PostNoHit=1

Swift.checkFields=20,21R,23B,28D,32A,32B,33B,50K,53A,56A,57A,58A,59A,59,70,71A,KS,KH,KOA,BBA,ABD,DCA,DSA,ZHA,ABA,UBA,50F,59F
Swift.BICFilds=53A,56A,57A,58A,59A,KOA,BBA,ABD,DCA,DSA,ZHA,ABA,UBA
Swift.fuzzyFields=20,21R,23B,28D,32A,32B,33B,50K,53A,56A,57A,58A,59A,59,70,71A,KS,KH,KOA,BBA,ABD,DCA,DSA,ZHA,ABA,UBA,50F,59F

#Swift.checkTypeTransportation=

Swift.StreamManager.Implementation=at.jps.sanction.domain.SanctionStreamManager


#--------------------------------
# Stream specific Queuedefinition
#--------------------------------

# memory based queues ( non-persistent for local traffic only !)
#Swift.InputQueue.Implementation=at.jps.sanction.model.queue.nonpersisted.MemoryInputQueue
#Swift.DefectQueue.Implementation=at.jps.sanction.model.queue.nonpersisted.MemoryOutputQueue
#Swift.HitQueue.Implementation=at.jps.sanction.model.queue.nonpersisted.MemoryOutputQueue
#Swift.NoHitQueue.Implementation=at.jps.sanction.model.queue.nonpersisted.MemoryOutputQueue

#file based queues
# Queue parameters
Swift.InputQueue.QueueBase=C:\\temp\\SanctionTest\\queues\\swift
Swift.NoHitQueue.QueueBase=C:\\temp\\SanctionTest\\queues\\swift
Swift.HitQueue.QueueBase=C:\\temp\\SanctionTest\\queues\\swift
Swift.DefectQueue.QueueBase=C:\\temp\\SanctionTest\\queues\\swift

Swift.PostNoHitQueue.QueueBase=C:\\temp\\SanctionTest\\queues\\swift
Swift.PostHitQueue.QueueBase=C:\\temp\\SanctionTest\\queues\\swift

Swift.InputQueue.QueueSize=1234
Swift.NoHitQueue.QueueSize=1234
Swift.HitQueue.QueueSize=1234
Swift.DefectQueue.QueueSize=1234


## MemoryMapped File based

#Swift.InputQueue.Implementation=at.jps.sanction.core.queue.persisted.FileInputQueue
#Swift.DefectQueue.Implementation=at.jps.sanction.core.queue.persisted.FileOutputQueue
#Swift.HitQueue.Implementation=at.jps.sanction.core.queue.persisted.FileOutputQueue
#Swift.NoHitQueue.Implementation=at.jps.sanction.core.queue.persisted.FileOutputQueue
#Swift.PostHitQueue.Implementation=at.jps.sanction.core.queue.persisted.FileOutputQueue
#Swift.PostNoHitQueue.Implementation=at.jps.sanction.core.queue.persisted.FileOutputQueue



## JMS Based implementation
Swift.InputQueue.Implementation=at.jps.sanction.core.queue.jms.JMSInputQueue
Swift.DefectQueue.Implementation=at.jps.sanction.core.queue.jms.JMSOutputQueue
Swift.HitQueue.Implementation=at.jps.sanction.core.queue.jms.JMSOutputQueue
Swift.NoHitQueue.Implementation=at.jps.sanction.core.queue.jms.JMSOutputQueue
Swift.PostHitQueue.Implementation=at.jps.sanction.core.queue.jms.JMSOutputQueue
Swift.PostNoHitQueue.Implementation=at.jps.sanction.core.queue.jms.JMSOutputQueue

Swift.InputQueue.JMXURL=tcp://localhost:61616
Swift.DefectQueue.JMXURL=tcp://localhost:61616
Swift.HitQueue.JMXURL=tcp://localhost:61616
Swift.InputQueue.JMXURL=tcp://localhost:61616
Swift.NoHitQueue.JMXURL=tcp://localhost:61616
Swift.PostHitQueue.JMXURL=tcp://localhost:61616
Swift.PostNoHitQueue.JMXURL=tcp://localhost:61616

# Stream specific workers 

Swift.InputReader.Implementation=at.jps.sanction.core.io.file.FileInputWorker
Swift.FileParser.Implementation=at.jps.sanction.domain.swift.SwiftFileParser
Swift.OutputWriter.Implementation=at.jps.sanction.core.io.file.FileOutputWorker
Swift.ErrorProcessor.Implementation=at.jps.sanction.core.io.file.FileOutputWorker
Swift.MessageParser.Implementation=at.jps.sanction.core.io.file.FileInputWorker
Swift.MessageChecker.Implementation=at.jps.sanction.domain.swift.SwiftAnalyzer

# optional
Swift.PostProcessorHit.Implementation=at.jps.sanction.domain.swift.worker.SwiftPostHitWorker
Swift.PostProcessorNoHit.Implementation=at.jps.sanction.domain.swift.worker.SwiftPostNoHitWorker

#Swift.HitProcessor.Implementation=at.jps.sanction.core.io.file.FileInputWorker
#Swift.NoHitProcessor.Implementation=at.jps.sanction.core.io.file.FileInputWorker


#-----------------------------------------------

# Swift Message Handling
Sepa.minTokenLen=2
Sepa.minRelVal=79
Sepa.minAbsVal=60
# fuzzynessfactor %
Sepa.fuzzyVal=20

Sepa.Input.Folder=C:\\temp\\SanctionTest\\in\\sepa
Sepa.Input.FilePattern=*.DAT
Sepa.Output.Folder=C:\\temp\\SanctionTest\\out\\sepa

Sepa.InputDelay=10000

# for file persisted only - path(or just a token)

Sepa.NrWorkers.Input=1
Sepa.NrWorkers.OutputHit=0
Sepa.NrWorkers.OutputNoHit=0
Sepa.NrWorkers.Error=1
Sepa.NrWorkers.Checker=4

Sepa.StreamManager.Implementation=at.jps.sanction.domain.sepa.SepaStreamManager
Sepa.InputQueue.Implementation=at.jps.sanction.core.queue.persisted.FileInputQueue
Sepa.DefectQueue.Implementation=at.jps.sanction.core.queue.persisted.FileOutputQueue
Sepa.HitQueue.Implementation=at.jps.sanction.core.queue.persisted.FileOutputQueue
Sepa.NoHitQueue.Implementation=at.jps.sanction.core.queue.persisted.FileOutputQueue

Sepa.InputQueue.QueueBase=C:\\temp\\SanctionTest\\queues\\sepa
Sepa.NoHitQueue.QueueBase=C:\\temp\\SanctionTest\\queues\\sepa
Sepa.HitQueue.QueueBase=C:\\temp\\SanctionTest\\queues\\sepa
Sepa.DefectQueue.QueueBase=C:\\temp\\SanctionTest\\queues\\sepa

Sepa.InputQueue.QueueSize=1234
Sepa.NoHitQueue.QueueSize=1234
Sepa.HitQueue.QueueSize=1234
Sepa.DefectQueue.QueueSize=1234

Sepa.InputReader.Implementation=at.jps.sanction.core.io.file.FileInputWorker
Sepa.FileParser.Implementation=at.jps.sanction.domain.sepa.SepaFileParser
Sepa.OutputWriter.Implementation=at.jps.sanction.core.io.file.FileOutputWorker
Sepa.ErrorProcessor.Implementation=at.jps.sanction.core.io.file.FileOutputWorker
Sepa.MessageParser.Implementation=at.jps.sanction.core.io.file.FileInputWorker
Sepa.MessageChecker.Implementation=at.jps.sanction.domain.sepa.SepaAnalyzer

# these are the names of *.properties files !! 
Sepa.MsgTypes=pacs.003,pacs.008


#-----------------------------------------------

#name checking

Name.minTokenLen=2
Name.minRelVal=79
Name.minAbsVal=79


Name.Input.Folder=C:\\temp\\SanctionTest\\in\\name
Name.Input.FilePattern=*.txt
Name.Output.Folder=C:\\temp\\SanctionTest\\out\\name

Name.NrWorkers.Input=2
Name.NrWorkers.Output=2
Name.NrWorkers.Checker=4

Name.StreamManager.Implementation=at.jps.sanction.domain.SwiftStreamManager
Name.InputQueue.Implementation=at.jps.sanction.core.queue.nonpersisted.MemoryInputQueue
Name.DefectQueue.Implementation=at.jps.sanction.core.queue.nonpersisted.MemoryOutputQueue
Name.HitQueue.Implementation=at.jps.sanction.core.queue.nonpersisted.MemoryOutputQueue
Name.NoHitQueue.Implementation=at.jps.sanction.core.queue.nonpersisted.MemoryOutputQueue

Name.InputQueue.QueueSize=1234
Name.NoHitQueue.QueueSize=1234
Name.HitQueue.QueueSize=1234
Name.DefectQueue.QueueSize=1234

# for file persisted only - path(or just a token)
Name.InputQueue.QueueBase=C:\\temp\\SanctionTest\\queues
Name.NoHitQueue.QueueBase=C:\\temp\\SanctionTest\\queues
Name.HitQueue.QueueBase=C:\\temp\\SanctionTest\\queues
Name.DefectQueue.QueueBase=C:\\temp\\SanctionTest\\queues


#Name.QueueStatusChecker.Implementation=at.jps.sanction.model.QueueChecker

Name.InputReader.Implementation=at.jps.sanction.core.io.file.FileInputWorker
Name.FileParser.Implementation=at.jps.sanction.domain.name.NameFileParser
Name.OutputWriter.Implementation=at.jps.sanction.core.io.file.FileOutputWorker
Name.ErrorProcessor.Implementation=at.jps.sanction.core.io.file.FileOutputWorker
Name.MessageParser.Implementation=at.jps.sanction.core.io.file.FileInputWorker
Name.MessageChecker.Implementation=at.jps.sanction.domain.name.NameAnalyzer
Name.HitProcessor.Implementation=at.jps.sanction.core.io.file.FileInputWorker
Name.NoHitProcessor.Implementation=at.jps.sanction.core.io.file.FileInputWorker


#-----------------------------------------------
#-----------------------------------------------
#-----------------------------------------------

#general list settings
#lists=EUList;OFACList;EUList;

watchlists=EUList,OFACList,INDSANList,DowJones
watchlists.hist.folder=C:\\temp\\SanctionTest\\listhist
watchlists.use.sysproxy=true

watchlist.EUList.loader=at.jps.sanction.core.listhandler.watchlist.EUListHandler
# if url is specified it will take precedence and filename is ignored!
watchlist.EUList.filename=C:/Users/johannes/workspaces/SanctionList/SLHandler/src/lists/global.xml
#watchlist.EUList.url=http://ec.europa.eu/external_relations/cfsp/sanctions/list/version4/global/global.xml
watchlist.EUList.fuzzysearch=true
watchlist.EUList.4eyesprinciple=true
watchlist.EUList.description=Consolidated list of persons, groups and entities subject to EU financial sanctions
watchlist.EUList.type=SL
# 1. Trennzeichen
watchlist.EUList.delimiters=;,., ,(,),$,.,',",/

# 2. these characters will get removed from tokens ( delimiter ,) 
watchlist.EUList.deadchars.AT=;,?,|,(,),$,.,',"

# 3. these characters will get replaced ( delimiter | )
watchlist.EUList.replacechars.AT=-=|Ś=Z|Ł=L|Ż=Z|Ń=N|Ó=O|É=E|Á=A 

#watchlist.EUList.stopwords.AT=der,die,das,of,the,e,a,o,LTD,LTD.,co,&,and
#watchlist.EUList.stopwords.EN=the,a,gammel

#-----------------------------------------------

#watchlist.OFAC.loader=at.jps.sanction.core.listhandler.watchwatchlist.OFACListHandler
#watchlist.OFAC.filename=C:/Users/johannes/workspaces/SanctionList/SLHandler/src/lists/ofac-sdn.xml
watchlist.OFACList.loader=at.jps.sanction.core.listhandler.watchlist.OFAC_ASDM_ListHandler
watchlist.OFACList.filename=C:/Users/johannes/workspaces/SanctionList/SLHandler/src/lists/ofac-sdn_advanced.xml
#watchlist.OFACList.url=http://www.treasury.gov/ofac/downloads/sanctions/1.0/sdn_advanced.xml

watchlist.OFACList.loadWeak=false
watchlist.OFACList.loadNonPrimary=true
watchlist.OFACList.fuzzysearch=true
watchlist.OFACList.4eyesprinciple=true
watchlist.OFACList.description=Specially Designated Nationals List (SDN) from the Office of Foreign Assets Control
watchlist.OFACList.type=SL

# 1. Trennzeichen
watchlist.OFACList.delimiters=;,., ,(,),$,.,',",/

# 2. these characters will get removed from tokens ( delimiter ,) 
watchlist.OFACList.deadchars.AT=;,?,|,(,),$,.,',"

# 3. these characters will get replaced ( delimiter | )
watchlist.OFACList.replacechars.AT=-=|Ś=Z|Ł=L|Ż=Z|Ń=N|Ó=O|É=E|Á=A 


#-----------------------------------------------

watchlist.INDSANList.loader=at.jps.sanction.core.listhandler.watchlist.INDSANListHandler
watchlist.INDSANList.filename=C:/Users/johannes/workspaces/SanctionList/SLHandler/src/lists/indsan.csv
watchlist.INDSANList.type=SAN
watchlist.INDSANList.fuzzysearch=true
watchlist.INDSANList.4eyesprinciple=true
watchlist.INDSANList.description=Individual Sanction List

# 1. Trennzeichen
watchlist.INDSANList.delimiters=;,., ,(,),$,.,',",/
# 2. these characters will get removed from tokens ( delimiter ,) 
watchlist.INDSANList.deadchars.AT=;,?,|,(,),$,.,',"
# 3. these characters will get replaced ( delimiter | )
watchlist.INDSANList.replacechars.AT=-=|Ś=Z|Ł=L|Ż=Z|Ń=N|Ó=O|É=E|Á=A 

#-----------------------------------------------

watchlist.DowJones.loader=at.jps.sanction.core.listhandler.watchlist.DJListHandler
watchlist.DowJones.filename=C:/Users/johannes/workspaces/SanctionList/SLHandler/src/lists/ST_xml_1039_001_201511230002_f.xml
watchlist.DowJones.fuzzysearch=true
watchlist.DowJones.4eyesprinciple=true
watchlist.DowJones.description=Dow Jones Sanctions and Other Official Lists
watchlist.DowJones.loadWeak=false
watchlist.DowJones.loadNonPrimary=true
watchlist.DowJones.type=SL

# valid values for description1 are: ( comma separated )
#  1 = "Politically Exposed Person (PEP)"
#  2 = "Relative or Close Associate (RCA)"
#  3 = "Special Interest Person (SIP)"
#  4 = "Special Interest Entity (SIE)"
watchlist.DowJones.LoadDescription1=1,2,3,4

# 1. Trennzeichen
watchlist.DowJones.delimiters=;,., ,(,),$,.,',",/
# 2. these characters will get removed from tokens ( delimiter ,) 
watchlist.DowJones.deadchars.AT=;,?,|,(,),$,.,',"
# 3. these characters will get replaced ( delimiter | )
watchlist.DowJones.replacechars.AT=-=|Ś=Z|Ł=L|Ż=Z|Ń=N|Ó=O|É=E|Á=A 


#-----------------------------------------------
#general reference list def
reflists=BICList,CountryList,NCCTList

reflist.CountryList.loader=at.jps.sanction.core.listhandler.reflist.CountryListHandler
reflist.CountryList.filename=C:/Users/johannes/workspaces/SanctionList/SLHandler/src/lists/countries.properties

reflist.CurrencyList.loader=at.jps.sanction.core.listhandler.reflist.CurrencyListHandler
reflist.CurrencyList.filename=C:/Users/johannes/workspaces/SanctionList/SLHandler/src/lists/currencies.properties

reflist.BICList.loader=at.jps.sanction.core.listhandler.reflist.BicListHandler
reflist.BICList.filename=C:/Users/johannes/workspaces/SanctionList/SLHandler/src/lists/BICs.csv

reflist.NCCTList.loader=at.jps.sanction.core.listhandler.reflist.NCCTListHandler
reflist.NCCTList.filename=C:/Users/johannes/workspaces/SanctionList/SLHandler/src/lists/NCCTcountries.properties


vallists=SWList,IAList,NSWHList

vallist.SWList.loader=at.jps.sanction.core.listhandler.valuelist.SWListHandler
vallist.SWList.filename=C:/Users/johannes/workspaces/SanctionList/SLHandler/src/lists/SWL.txt

vallist.IAList.loader=at.jps.sanction.core.listhandler.valuelist.IAListHandler
vallist.IAList.filename=C:/Users/johannes/workspaces/SanctionList/SLHandler/src/lists/IAL.txt

vallist.NSWHList.loader=at.jps.sanction.core.listhandler.valuelist.NSWHListHandler
vallist.NSWHList.filename=C:/Users/johannes/workspaces/SanctionList/SLHandler/src/lists/NSWH.txt

#-----------------------------------------------

# OPtiList -- special treatment !! only one
# collects confirmed no hits 
optilist-nohit.loader=at.jps.sanction.core.listhandler.optilist.TXNoHitOptimizationListHandler
optilist-nohit.filename=C:/Users/johannes/workspaces/SanctionList/SLHandler/src/lists/TXNOHIT-OPTI.txt
optilist-nohit.autoDiscardHitsOnConfirmStatus=true

# OPtiList -- special treatment !! only one
# collects confirmed hits 
optilist-hit.loader=at.jps.sanction.core.listhandler.optilist.TXHitOptimizationListHandler
optilist-hit.filename=C:/Users/johannes/workspaces/SanctionList/SLHandler/src/lists/TXHIT-OPTI.txt
optilist-hit.autoDiscardHitsOnConfirmStatus=true

#-----------------------------------------------
# nohitList -- special treatment !! only one ( fuzzy field <-> listrecord entry SINGLE WORD mapping!!) 
nowordhitlist.loader=at.jps.sanction.core.listhandler.optilist.NonWordHitOptimizationListhandler
nowordhitlist.filename=C:/Users/johannes/workspaces/SanctionList/SLHandler/src/lists/NOWORDHIT.txt

#-----------------------------------------------
#-----------------------------------------------
#-----------------------------------------------

#Hit or No Hit Queue from Batch reader
GUI.Stream.Name=Swift

GUI.fields.color.type.UNCHECKED=#EBE9DA
GUI.fields.color.type.HIT=#DDFFFF
GUI.fields.color.type.SL=#C390D4
GUI.fields.color.type.PEP=#A1D490
GUI.fields.color.type.SAN=#90C3D4
GUI.fields.color.type.KTO=#92C5D6
GUI.fields.color.type.NCCT=#A3C695

#MANUAL WORKING QUEUES

GUI.Swift.QueueBase.HitQueue=C:\\temp\\SanctionTest\\queues\\swift
GUI.Swift.QueueBase.NoHitQueue=C:\\temp\\SanctionTest\\queues\\swift

GUI.Swift.QueueBase.PostNoHitQueue=C:\\temp\\SanctionTest\\queues\\swift
GUI.Swift.QueueBase.PostHitQueue=C:\\temp\\SanctionTest\\queues\\swift

GUI.Swift.QueueBase.FinalNoHitQueue=C:\\temp\\SanctionTest\\queues\\swift
GUI.Swift.QueueBase.FinalHitQueue=C:\\temp\\SanctionTest\\queues\\swift

GUI.Swift.QueueBase.BacklogQueue=C:\\temp\\SanctionTest\\queues\\swift
















